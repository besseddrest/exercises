// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
function evenFibonacciNumbers(max) {
  // start with first two numbers
  let arr = [1, 2];

  // push all fibonacci numbers to array until we get to max
  for (let i = 2; arr[arr.length - 1] <= max; i++) {
    arr.push(arr[i - 2] + arr[i - 1]);
  }

  // filter for even and below max
  const filtered = arr.filter(num => {
    return (num % 2 === 0 && num <= max);
  });

  // add all numbers
  let sum = filtered.reduce((a, b) => {
    return a + b
  }, 0);

  return sum;
}

console.log(evenFibonacciNumbers(4000000));
